@use "sass:map";
@use "sass:color";
@use "../../functions" as func;

// Generate utility classes for button
@mixin generateButtonColors($colors, $grayWhiteColors: null) {
  @each $name, $values in $colors {
    $varName: func.buildVariableName("color", $name, "");

    .button-#{$name} {
      background-color: var(#{$varName}-400) !important;
      color: if(
        color.channel(map.get($values, 400), "lightness", $space: hsl) > 50%,
        var(--color-gray-950),
        var(--color-gray-50)
      );

      &:hover {
        background-color: var(#{$varName}-500) !important;
      }
    }

    .button-#{$name}.outlined {
      background-color: transparent !important;
      color: var(#{$varName}-400) !important;
      border: solid var(#{$varName}-400) 2px !important;
      font-weight: bold;
      transition: color ease-in-out 200ms, border ease-in 200ms !important;

      &:hover {
        border-color: var(#{$varName}-500) !important;
        color: var(#{$varName}-500) !important;
      }
    }

    .button-#{$name}.colored {
      background-color: var(#{$varName}-25) !important;
      color: var(#{$varName}-500) !important;
      transition: color ease-in-out 200ms, background ease-in 200ms !important;

      &:hover {
        background-color: var(#{$varName}-50) !important;
      }
    }

    @media (prefers-color-scheme: dark) {
      .button-#{$name}.colored {
        background-color: var(#{$varName}-975) !important;
        color: var(#{$varName}-500) !important;

        &:hover {
          background-color: var(#{$varName}-950) !important;
        }
      }
    }

    @if $grayWhiteColors != null {
      @each $name, $values in $grayWhiteColors {
        $varName: func.buildVariableName("color", "gray", "");
        $varBase: map.get($values, base);

        .button-#{$name} {
          background-color: var(
            #{$varName}-#{map.get($values, base)}
          ) !important;
          color: if(
            color.channel(
                map.get($colors, "gray", $varBase),
                "lightness",
                $space: hsl
              ) >
              50%,
            var(--color-gray-950),
            var(--color-gray-50)
          );

          &:hover {
            background-color: var(
              #{$varName}-#{map.get($values, hover)}
            ) !important;
          }
        }

        .button-#{$name}.outlined {
          background-color: transparent !important;
          color: var(#{$varName}-#{map.get($values, base)}) !important;
          border: solid
            var(#{$varName}-#{map.get($values, base)})
            2px !important;
          font-weight: bold;
          transition: color ease-in-out 200ms, border ease-in 200ms !important;

          &:hover {
            border-color: var(
              #{$varName}-#{map.get($values, hover)}
            ) !important;
            color: var(#{$varName}-#{map.get($values, hover)}) !important;
          }
        }
      }
    }
  }
}

@use "sass:map";
@use "sass:color";

// Generate utility classes for button
@mixin generateButtonColors($colors, $grayWhiteColors: null) {
  @each $colorName, $values in $colors {
    .button-#{$colorName} {
      background-color: map.get($values, 400) !important;
      color: if(
        color.channel(map.get($values, 400), "lightness", $space: hsl) > 50%,
        #121212,
        #fcfcfc
      );

      &:hover {
        background-color: map.get($values, 500) !important;
      }
    }

    .button-#{$colorName}.outlined {
      background-color: transparent !important;
      color: map.get($values, 400) !important;
      border: solid map.get($values, 400) 2px !important;
      font-weight: bold;
      transition: color ease-in-out 200ms, border ease-in 200ms !important;

      &:hover {
        border-color: map.get($values, 500) !important;
        color: map.get($values, 500) !important;
      }
    }

    .button-#{$colorName}.colored {
      background-color: rgba(map.get($values, 500), 0.2) !important;
      color: map.get($values, 500) !important;
      transition: color ease-in-out 200ms, background ease-in 200ms !important;

      &:hover {
        background-color: rgba(map.get($values, 500), 0.3) !important;
      }
    }
  }

  @if $grayWhiteColors != null {
    @each $colorName, $values in $grayWhiteColors {
      .button-#{$colorName} {
        background-color: map.get($values, base) !important;
        color: if(
          color.channel(map.get($values, base), "lightness", $space: hsl) > 50%,
          #121212,
          #fcfcfc
        );

        &:hover {
          background-color: map.get($values, hover) !important;
        }
      }

      .button-#{$colorName}.outlined {
        background-color: transparent !important;
        color: map.get($values, base) !important;
        border: solid map.get($values, base) 2px !important;
        font-weight: bold;
        transition: color ease-in-out 200ms, border ease-in 200ms !important;

        &:hover {
          border-color: map.get($values, hover) !important;
          color: map.get($values, hover) !important;
        }
      }
    }
  }
}
